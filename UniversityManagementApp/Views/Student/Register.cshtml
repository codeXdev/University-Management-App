@model UniversityManagementApp.ViewModels.RegisterStudentViewModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Student</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Student.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Student.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Student.Date, new { htmlAttributes = new { @class = "form-control", id = "datepick" } })
                @Html.ValidationMessageFor(model => model.Student.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Student.Address,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Student.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Student.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Student.DepartmentId, new SelectList(Model.Departments, "Id", "Name"), "Select Department", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Student.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
    <h4>@ViewBag.Message</h4>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section styles
{

    <link href="~/Content/BootStrap-Datepicker/bootstrap-datepicker.min.css" rel="stylesheet" />
}
@section Scripts {
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {

            $('#datepick').datepicker({ format: 'dd MM yyyy', autoclose: true, clearBtn: true });

        });
    </script>
}
